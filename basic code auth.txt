const express = require("express");
const app = express();
const userModel = require("./models/user");
const postModel = require("./models/post");
const cookieParser = require("cookie-parser");
const bcrypt = require("bcrypt");
const jwt = require("jsonwebtoken");

app.set("view engine", "ejs");
app.use(express.json());
app.use(express.urlencoded({ extended: true }));
app.use(cookieParser());

app.get("/", (req, res) => {
  res.render("index");
});
// check protected pagge isLoggedIn working aur not

// app.get("/profile",isLoggedIn, (req, res) => {
//   res.send("hello");
// });


app.get("/profile",isLoggedIn, (req, res) => {
  res.render("profile");
});


//create account code

app.post("/register", async (req, res) => {
  let { email, password, username, name, age } = req.body;

  let user = await userModel.findOne({ email });
  if (user) return res.status(500).send("user already registered");

  bcrypt.genSalt(10, (err, salt) => {
    bcrypt.hash(password, salt, async (err, hash) => {
      let user = await userModel.create({
        username,
        email,
        age,
        name,
        password: hash, //error solved {} missing after create()
      });
      let token = jwt.sign({ email: email, userid: user._id }, "screatkey"); //screatkey always hidden just for practise i am leaving here i will keep it in .env

      res.cookie("token", token);
      res.send("registered");
    });
  });
});


//login code


app.get("/login", (req, res) => {
  res.render("login");
});

app.post("/login", async (req, res) => {
  let { email, password } = req.body;

  let user = await userModel.findOne({ email });
  if (!user) return res.status(500).send("Something Went Wrong");

  bcrypt.compare(password, user.password, (err, result) => {
    if (result){
        
         let token = jwt.sign({ email: email, userid: user._id }, "screatkey"); //screatkey always hidden just for practise i am leaving here i will keep it in .env

      res.cookie("token", token);

      res.status(200).send("you can login");
    }
    else res.redirect("/login");
  });
});

//logout code

app.get('/logout', (req,res)=>{
   res.cookie("token","");
   res.redirect("/login")
})


//protected site if u are not logged in u can't see all that page
function isLoggedIn(req,res,next){
    if(req.cookies.token==="") res.send('loggin kar pehle bhai');
    else{
       let data= jwt.verify(req.cookies.token,"screatkey");
       req.user=data;
       next();
    }
    
}





app.listen(3000);
